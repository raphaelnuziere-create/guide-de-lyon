#!/usr/bin/env node
/**
 * Script configur√© avec VOS bonnes cl√©s Supabase
 * Utilisation : node pexels-images-correct.mjs VOTRE_CLE_API_PEXELS
 */

import { createClient } from '@supabase/supabase-js';

// ‚ö†Ô∏è REMPLACEZ PAR VOTRE CL√â API PEXELS
const PEXELS_API_KEY = process.argv[2] || 'COLLEZ_VOTRE_CLE_API_PEXELS_ICI';

// Configuration Supabase (correcte pour VOTRE projet)
// Charger les variables d'environnement
import dotenv from 'dotenv';
dotenv.config({ path: '.env.local' });

const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;
const SUPABASE_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_KEY) {
  console.error('‚ùå ERREUR: Variables d\'environnement Supabase manquantes dans .env.local');
  process.exit(1);
}

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

// D√©terminer le terme de recherche selon le titre
const getSearchTerm = (title) => {
  const t = title.toLowerCase();
  
  // Recherches sp√©cifiques selon les mots-cl√©s
  if (t.includes('boulangerie') || t.includes('pain')) return 'french bakery bread pastry';
  if (t.includes('restaurant') && t.includes('terrasse')) return 'restaurant terrace outdoor dining';
  if (t.includes('restaurant')) return 'lyon restaurant french cuisine';
  if (t.includes('parc') || t.includes('t√™te')) return 'lyon park nature green';
  if (t.includes('festival') || t.includes('lumi√®re')) return 'lyon festival lights event';
  if (t.includes('march√©')) return 'french market fresh food local';
  if (t.includes('mus√©e') || t.includes('art')) return 'museum art gallery exhibition';
  if (t.includes('brunch')) return 'brunch breakfast restaurant cafe';
  if (t.includes('caf√©') || t.includes('coffee')) return 'french cafe coffee shop';
  if (t.includes('transport') || t.includes('tram')) return 'lyon tram public transport';
  if (t.includes('shopping') || t.includes('boutique')) return 'shopping store retail';
  if (t.includes('h√¥tel') || t.includes('hotel')) return 'hotel luxury accommodation';
  if (t.includes('sport') || t.includes('fitness')) return 'sport fitness gym activity';
  
  // Par d√©faut : Lyon
  return 'lyon france city beautiful';
};

// R√©cup√©rer une image depuis l'API Pexels
async function getPexelsImage(searchTerm) {
  try {
    const url = `https://api.pexels.com/v1/search?query=${encodeURIComponent(searchTerm)}&per_page=10&orientation=landscape&size=large`;
    
    const response = await fetch(url, {
      headers: {
        'Authorization': PEXELS_API_KEY
      }
    });

    if (!response.ok) {
      if (response.status === 401) {
        console.log('   ‚ùå Cl√© API Pexels invalide !');
      } else {
        console.log(`   ‚ö†Ô∏è Erreur API: ${response.status}`);
      }
      return null;
    }

    const data = await response.json();
    
    if (data.photos && data.photos.length > 0) {
      // Prendre une photo al√©atoire parmi les r√©sultats pour varier
      const randomIndex = Math.floor(Math.random() * Math.min(5, data.photos.length));
      const photo = data.photos[randomIndex];
      
      return {
        url: photo.src.large2x || photo.src.large || photo.src.original,
        alt: photo.alt || `Image de ${searchTerm}`,
        photographer: photo.photographer,
        photographer_url: photo.photographer_url
      };
    }
    
    console.log('   ‚ö†Ô∏è Aucune image trouv√©e pour cette recherche');
    return null;
  } catch (error) {
    console.error(`   ‚ùå Erreur r√©seau: ${error.message}`);
    return null;
  }
}

// Programme principal
async function main() {
  console.log('\nüöÄ MISE √Ä JOUR DES IMAGES AVEC PEXELS');
  console.log('=====================================\n');

  // V√©rifier la cl√© API Pexels
  if (!PEXELS_API_KEY || PEXELS_API_KEY === 'COLLEZ_VOTRE_CLE_API_PEXELS_ICI') {
    console.error('‚ùå CL√â API PEXELS MANQUANTE !\n');
    console.log('üìã Comment obtenir votre cl√© :');
    console.log('1. Allez sur https://www.pexels.com/api/');
    console.log('2. Cr√©ez un compte gratuit');
    console.log('3. Copiez votre API Key\n');
    console.log('üìù Utilisation :');
    console.log('   node pexels-images-correct.mjs VOTRE_CLE_API\n');
    console.log('Ou modifiez la ligne 10 du fichier avec votre cl√©\n');
    process.exit(1);
  }

  console.log('üîç Connexion √† Supabase...');
  console.log(`   URL: ${SUPABASE_URL}`);
  console.log(`   Projet: ikefyhxelzydaogrnwxi\n`);

  try {
    // R√©cup√©rer les articles depuis Supabase
    console.log('üìö R√©cup√©ration des articles...');
    
    const { data: posts, error } = await supabase
      .from('blog_posts')
      .select('id, title, slug, image_url')
      .order('created_at', { ascending: false });

    if (error) {
      console.error('\n‚ùå Erreur Supabase:', error.message);
      console.log('\nüí° Solutions possibles :');
      console.log('1. V√©rifiez que la table blog_posts existe');
      console.log('2. V√©rifiez les colonnes image_url et image_alt');
      console.log('3. Ex√©cutez d\'abord le script SQL de cr√©ation\n');
      return;
    }

    if (!posts || posts.length === 0) {
      console.log('\n‚ö†Ô∏è Aucun article trouv√© dans blog_posts');
      console.log('üí° Cr√©ez d\'abord des articles ou ex√©cutez le script SQL de d√©monstration\n');
      return;
    }

    console.log(`‚úÖ ${posts.length} articles trouv√©s\n`);
    console.log('üé® Recherche d\'images sur Pexels...\n');
    console.log('-------------------------------------');

    let success = 0;
    let skipped = 0;
    let errors = 0;

    // Traiter chaque article
    for (let i = 0; i < posts.length; i++) {
      const post = posts[i];
      
      // Afficher la progression
      const progress = `[${i + 1}/${posts.length}]`;
      const titleShort = post.title.length > 40 ? post.title.substring(0, 40) + '...' : post.title;
      console.log(`\n${progress} ${titleShort}`);
      
      // V√©rifier si l'article a d√©j√† une image
      if (post.image_url && !process.argv.includes('--force')) {
        console.log('   ‚è≠Ô∏è A d√©j√† une image');
        skipped++;
        continue;
      }

      // D√©terminer le terme de recherche
      const searchTerm = getSearchTerm(post.title);
      console.log(`   üîç Recherche: "${searchTerm}"`);
      
      // Chercher une image sur Pexels
      const image = await getPexelsImage(searchTerm);
      
      if (!image) {
        // Si pas d'image trouv√©e, essayer avec juste "Lyon"
        console.log('   üîÑ Recherche alternative: "Lyon France"');
        const lyonImage = await getPexelsImage('Lyon France cityscape');
        
        if (!lyonImage) {
          console.log('   ‚ùå Aucune image disponible');
          errors++;
          continue;
        }
        
        image = lyonImage;
      }

      // Mettre √† jour l'article avec l'image
      const { error: updateError } = await supabase
        .from('blog_posts')
        .update({
          image_url: image.url,
          image_alt: image.alt
        })
        .eq('id', post.id);

      if (updateError) {
        console.log(`   ‚ùå Erreur de sauvegarde: ${updateError.message}`);
        errors++;
      } else {
        console.log(`   ‚úÖ Image ajout√©e (¬© ${image.photographer})`);
        success++;
      }

      // Petite pause pour respecter les limites de l'API (200 requ√™tes/heure)
      await new Promise(resolve => setTimeout(resolve, 500));
    }

    // Afficher le r√©sum√©
    console.log('\n=====================================');
    console.log('üìä R√âSUM√â');
    console.log('=====================================');
    console.log(`‚úÖ Images ajout√©es : ${success}`);
    console.log(`‚è≠Ô∏è D√©j√† pr√©sentes : ${skipped}`);
    console.log(`‚ùå Erreurs : ${errors}`);
    console.log('=====================================\n');
    
    if (success > 0) {
      console.log('üéâ Succ√®s ! Vos articles ont maintenant de belles images Pexels HD\n');
      console.log('üëÄ Voir le r√©sultat :');
      console.log('   https://www.guide-de-lyon.fr/blog\n');
    }
    
    if (skipped > 0 && !process.argv.includes('--force')) {
      console.log('üí° Pour remplacer les images existantes :');
      console.log('   node pexels-images-correct.mjs VOTRE_CLE --force\n');
    }
    
  } catch (error) {
    console.error('\n‚ùå Erreur g√©n√©rale:', error.message);
    console.log('\nüí° V√©rifiez :');
    console.log('- Votre connexion internet');
    console.log('- Que Supabase est accessible');
    console.log('- Que votre cl√© API Pexels est valide\n');
  }
}

// Lancer le programme
main().catch(console.error);