#!/bin/bash

echo "==============================================="
echo "üîß SCRIPT DE R√âSOLUTION DES PROBL√àMES VERCEL"
echo "==============================================="
echo ""

# Fonction pour afficher en couleur
print_success() {
    echo -e "\033[0;32m‚úÖ $1\033[0m"
}

print_error() {
    echo -e "\033[0;31m‚ùå $1\033[0m"
}

print_info() {
    echo -e "\033[0;34m‚ÑπÔ∏è  $1\033[0m"
}

print_warning() {
    echo -e "\033[0;33m‚ö†Ô∏è  $1\033[0m"
}

# √âtape 1: V√©rifier GitHub CLI
echo "üìç √âtape 1: V√©rification de GitHub CLI"
if command -v gh &> /dev/null; then
    print_success "GitHub CLI est install√©"
    
    # V√©rifier l'authentification
    if gh auth status &>/dev/null; then
        print_success "Vous √™tes connect√© √† GitHub"
    else
        print_warning "Vous devez vous connecter √† GitHub"
        echo "Ex√©cutez: gh auth login"
        echo "Choisissez: GitHub.com ‚Üí HTTPS ‚Üí Login with web browser"
        exit 1
    fi
else
    print_error "GitHub CLI n'est pas install√©"
    echo "Installation en cours..."
    brew install gh
    echo "Puis ex√©cutez √† nouveau ce script"
    exit 1
fi

echo ""
echo "üìç √âtape 2: V√©rification du repository"

# V√©rifier la visibilit√© du repo
REPO_INFO=$(gh repo view raphaelnuziere-create/guide-de-lyon --json visibility,isPrivate 2>&1)

if [[ $REPO_INFO == *"Could not resolve"* ]]; then
    print_error "Repository non trouv√© ou pas d'acc√®s"
    echo "V√©rifiez que vous √™tes connect√© avec le bon compte GitHub"
    exit 1
fi

IS_PRIVATE=$(echo $REPO_INFO | grep -o '"isPrivate":[^,}]*' | cut -d: -f2)

if [[ $IS_PRIVATE == "true" ]]; then
    print_warning "Le repository est PRIV√â"
    echo ""
    echo "üîì SOLUTION RAPIDE: Rendre le repo PUBLIC temporairement"
    echo ""
    echo "Voulez-vous rendre le repository PUBLIC maintenant? (y/n)"
    read -r response
    
    if [[ "$response" == "y" ]]; then
        print_info "Passage du repository en PUBLIC..."
        gh repo edit raphaelnuziere-create/guide-de-lyon --visibility public
        
        if [ $? -eq 0 ]; then
            print_success "Repository maintenant PUBLIC!"
            echo ""
            echo "üìù PROCHAINES √âTAPES:"
            echo "1. Allez sur https://vercel.com/dashboard"
            echo "2. Cliquez sur votre projet 'guide-lyon-v2'"
            echo "3. Cliquez sur 'Redeploy' (bouton en haut √† droite)"
            echo "4. Attendez 2-3 minutes"
            echo "5. Testez: https://www.guide-de-lyon.fr/test"
            echo ""
            echo "Une fois que tout fonctionne, vous pourrez repasser en priv√© avec:"
            echo "gh repo edit raphaelnuziere-create/guide-de-lyon --visibility private"
        else
            print_error "Erreur lors du changement de visibilit√©"
            echo "Essayez manuellement sur GitHub.com"
        fi
    else
        echo ""
        echo "üìã INSTRUCTIONS MANUELLES:"
        echo "1. Allez sur https://github.com/raphaelnuziere-create/guide-de-lyon"
        echo "2. Cliquez sur Settings (‚öôÔ∏è)"
        echo "3. Scrollez tout en bas"
        echo "4. 'Change repository visibility' ‚Üí Public"
        echo "5. Confirmez"
        echo "6. Retournez sur Vercel et cliquez 'Redeploy'"
    fi
else
    print_success "Le repository est d√©j√† PUBLIC"
    echo ""
    echo "Le probl√®me n'est pas la visibilit√© du repo."
    echo ""
    echo "üìù V√âRIFICATIONS √Ä FAIRE:"
    echo "1. Sur Vercel (https://vercel.com/dashboard):"
    echo "   - Le projet existe-t-il?"
    echo "   - Y a-t-il des erreurs dans l'onglet 'Functions'?"
    echo "   - Dans Settings ‚Üí Git, le repo est-il bien connect√©?"
    echo ""
    echo "2. Essayez de red√©ployer:"
    echo "   - Cliquez sur 'Redeploy' dans Vercel"
    echo "   - Ou forcez un nouveau commit:"
    git add . && git commit -m "Force redeploy" --allow-empty && git push
fi

echo ""
echo "==============================================="
echo "üìß Si le probl√®me persiste:"
echo "Partagez ces informations avec le support:"
echo "- Repository: raphaelnuziere-create/guide-de-lyon" 
echo "- Branch: main"
echo "- Derniers commits pouss√©s avec succ√®s"
echo "==============================================="