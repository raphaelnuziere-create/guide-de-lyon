#!/usr/bin/env node

// Script pour tester la connexion merchant
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testMerchantLogin() {
  console.log('üîç Test connexion merchant@guide-de-lyon.fr\n');

  try {
    // 1. Tenter la connexion
    console.log('1. Tentative de connexion...');
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'merchant@guide-de-lyon.fr',
      password: 'Merchant2025!'
    });
    
    if (authError) {
      console.error('‚ùå Erreur connexion:', authError);
      return;
    }
    
    console.log('‚úÖ Connexion r√©ussie');
    console.log('User ID:', authData.user.id);
    
    // 2. V√©rifier l'√©tablissement
    console.log('\n2. Recherche de l\'√©tablissement...');
    const { data: establishment, error: estError } = await supabase
      .from('establishments')
      .select('*')
      .eq('user_id', authData.user.id)
      .single();
    
    if (estError) {
      console.error('‚ùå Erreur recherche √©tablissement:', estError);
      console.log('\n‚ö†Ô∏è PROBL√àME: Pas d\'√©tablissement trouv√©');
      console.log('C\'est pourquoi vous √™tes redirig√© vers /pro/inscription');
      return;
    }
    
    console.log('‚úÖ √âtablissement trouv√©:');
    console.log('  - ID:', establishment.id);
    console.log('  - Nom:', establishment.name);
    console.log('  - Status:', establishment.status);
    console.log('  - Cat√©gorie:', establishment.category);
    
    console.log('\n‚ú® Tout est OK ! La connexion devrait fonctionner.');
    console.log('Si vous √™tes toujours redirig√© vers inscription:');
    console.log('1. Videz le cache du navigateur');
    console.log('2. Utilisez une fen√™tre priv√©e');
    console.log('3. V√©rifiez la console du navigateur pour les erreurs');
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

// Ex√©cuter
testMerchantLogin();