#!/usr/bin/env npx tsx
/**
 * Script pour r√©√©crire un seul article avec OpenAI
 */

import { supabase } from '../lib/supabase'
import { generateArticleContent } from '../lib/openai/content-generator'

async function rewriteSingleArticle(slug: string) {
  console.log('ü§ñ R√â√âCRITURE D\'UN ARTICLE AVEC OPENAI')
  console.log('=' .repeat(60))

  // R√©cup√©rer l'article
  const { data: article, error } = await supabase
    .from('blog_posts')
    .select('*')
    .eq('slug', slug)
    .single()

  if (error || !article) {
    console.error('‚ùå Article non trouv√©:', slug)
    return
  }

  console.log(`\nüìù Article: ${article.title}`)
  console.log(`   Slug: ${article.slug}`)
  console.log(`   Contenu actuel: ${article.content?.split(' ').length || 0} mots`)

  // G√©n√©rer le nouveau contenu
  console.log('\nü§ñ G√©n√©ration du nouveau contenu...')
  const result = await generateArticleContent({
    title: article.title,
    slug: article.slug,
    currentContent: article.content,
    excerpt: article.excerpt
  })

  if (!result) {
    console.error('‚ùå √âchec de la g√©n√©ration')
    return
  }

  const wordCount = result.content.split(' ').length
  console.log(`‚úÖ Contenu g√©n√©r√©: ${wordCount} mots`)

  // Mettre √† jour dans la base de donn√©es
  const { error: updateError } = await supabase
    .from('blog_posts')
    .update({
      content: result.content,
      excerpt: result.excerpt,
      meta_description: result.metaDescription,
      updated_at: new Date().toISOString()
    })
    .eq('id', article.id)

  if (updateError) {
    console.error('‚ùå Erreur mise √† jour:', updateError)
    return
  }

  console.log('\n‚úÖ Article r√©√©crit avec succ√®s!')
  console.log(`üìé URL: https://www.guide-de-lyon.fr/blog/${slug}`)
  console.log(`üìä Nouveau contenu: ${wordCount} mots`)
  console.log(`üìù Meta description: ${result.metaDescription}`)
}

// R√©cup√©rer le slug depuis les arguments
const slug = process.argv[2] || 'coworking-lyon-lyon-2025'

rewriteSingleArticle(slug).catch(console.error)