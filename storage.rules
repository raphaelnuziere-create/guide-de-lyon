rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isMerchant(merchantId) {
      return isAuthenticated() && request.auth.uid == merchantId;
    }
    
    function isImageFile() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
    
    // Merchant uploads
    match /merchants/{merchantId}/{allPaths=**} {
      allow read: if true; // Public access to merchant content
      allow write: if isMerchant(merchantId) && isValidSize();
    }
    
    // Place images
    match /places/{placeId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated() && isImageFile() && isValidSize();
    }
    
    // Event images
    match /events/{eventId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated() && isImageFile() && isValidSize();
    }
    
    // User avatars
    match /users/{userId}/avatar/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == userId && 
        isImageFile() && 
        isValidSize();
    }
    
    // Public assets (logos, banners, etc)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Admin only via console
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
  }
}